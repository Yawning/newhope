// Generated by PeachPy 0.2.0 from chacha20_amd64.py


// func blocksAmd64SSE2(sigma *uint32, one *uint32, x *uint32, inp *uint8, outp *uint8, nrBlocks *uint)
TEXT Â·blocksAmd64SSE2(SB),4,$0-48
	MOVQ sigma+0(FP), AX
	MOVQ one+8(FP), BX
	MOVQ x+16(FP), CX
	MOVQ inp+24(FP), DX
	MOVQ outp+32(FP), DI
	MOVQ nrBlocks+40(FP), SI
	MOVOU 0(CX), X1
	MOVOU 16(CX), X2
	MOVOU 32(CX), X3
	SUBQ $3, SI
	JCS vector_loop_end
vector_loop_begin:
		MOVOU 0(AX), X4
		MOVO X1, X5
		MOVO X2, X6
		MOVO X3, X7
		MOVOU 0(AX), X8
		MOVO X1, X9
		MOVO X2, X10
		MOVO X3, X11
		PADDQ 0(BX), X11
		MOVOU 0(AX), X12
		MOVO X1, X13
		MOVO X2, X14
		MOVO X11, X15
		PADDQ 0(BX), X15
		MOVQ $20, BP
rounds_loop0_begin:
			PADDL X5, X4
			PXOR X4, X7
			MOVO X7, X0
			PSLLL $16, X0
			PSRLL $16, X7
			PXOR X0, X7
			PADDL X7, X6
			PXOR X6, X5
			MOVO X5, X0
			PSLLL $12, X0
			PSRLL $20, X5
			PXOR X0, X5
			PADDL X5, X4
			PXOR X4, X7
			MOVO X7, X0
			PSLLL $8, X0
			PSRLL $24, X7
			PXOR X0, X7
			PADDL X7, X6
			PXOR X6, X5
			MOVO X5, X0
			PSLLL $7, X0
			PSRLL $25, X5
			PXOR X0, X5
			PSHUFL $57, X5, X5
			PSHUFL $78, X6, X6
			PSHUFL $147, X7, X7
			PADDL X5, X4
			PXOR X4, X7
			MOVO X7, X0
			PSLLL $16, X0
			PSRLL $16, X7
			PXOR X0, X7
			PADDL X7, X6
			PXOR X6, X5
			MOVO X5, X0
			PSLLL $12, X0
			PSRLL $20, X5
			PXOR X0, X5
			PADDL X5, X4
			PXOR X4, X7
			MOVO X7, X0
			PSLLL $8, X0
			PSRLL $24, X7
			PXOR X0, X7
			PADDL X7, X6
			PXOR X6, X5
			MOVO X5, X0
			PSLLL $7, X0
			PSRLL $25, X5
			PXOR X0, X5
			PSHUFL $147, X5, X5
			PSHUFL $78, X6, X6
			PSHUFL $57, X7, X7
			PADDL X9, X8
			PXOR X8, X11
			MOVO X11, X0
			PSLLL $16, X0
			PSRLL $16, X11
			PXOR X0, X11
			PADDL X11, X10
			PXOR X10, X9
			MOVO X9, X0
			PSLLL $12, X0
			PSRLL $20, X9
			PXOR X0, X9
			PADDL X9, X8
			PXOR X8, X11
			MOVO X11, X0
			PSLLL $8, X0
			PSRLL $24, X11
			PXOR X0, X11
			PADDL X11, X10
			PXOR X10, X9
			MOVO X9, X0
			PSLLL $7, X0
			PSRLL $25, X9
			PXOR X0, X9
			PSHUFL $57, X9, X9
			PSHUFL $78, X10, X10
			PSHUFL $147, X11, X11
			PADDL X9, X8
			PXOR X8, X11
			MOVO X11, X0
			PSLLL $16, X0
			PSRLL $16, X11
			PXOR X0, X11
			PADDL X11, X10
			PXOR X10, X9
			MOVO X9, X0
			PSLLL $12, X0
			PSRLL $20, X9
			PXOR X0, X9
			PADDL X9, X8
			PXOR X8, X11
			MOVO X11, X0
			PSLLL $8, X0
			PSRLL $24, X11
			PXOR X0, X11
			PADDL X11, X10
			PXOR X10, X9
			MOVO X9, X0
			PSLLL $7, X0
			PSRLL $25, X9
			PXOR X0, X9
			PSHUFL $147, X9, X9
			PSHUFL $78, X10, X10
			PSHUFL $57, X11, X11
			PADDL X13, X12
			PXOR X12, X15
			MOVO X15, X0
			PSLLL $16, X0
			PSRLL $16, X15
			PXOR X0, X15
			PADDL X15, X14
			PXOR X14, X13
			MOVO X13, X0
			PSLLL $12, X0
			PSRLL $20, X13
			PXOR X0, X13
			PADDL X13, X12
			PXOR X12, X15
			MOVO X15, X0
			PSLLL $8, X0
			PSRLL $24, X15
			PXOR X0, X15
			PADDL X15, X14
			PXOR X14, X13
			MOVO X13, X0
			PSLLL $7, X0
			PSRLL $25, X13
			PXOR X0, X13
			PSHUFL $57, X13, X13
			PSHUFL $78, X14, X14
			PSHUFL $147, X15, X15
			PADDL X13, X12
			PXOR X12, X15
			MOVO X15, X0
			PSLLL $16, X0
			PSRLL $16, X15
			PXOR X0, X15
			PADDL X15, X14
			PXOR X14, X13
			MOVO X13, X0
			PSLLL $12, X0
			PSRLL $20, X13
			PXOR X0, X13
			PADDL X13, X12
			PXOR X12, X15
			MOVO X15, X0
			PSLLL $8, X0
			PSRLL $24, X15
			PXOR X0, X15
			PADDL X15, X14
			PXOR X14, X13
			MOVO X13, X0
			PSLLL $7, X0
			PSRLL $25, X13
			PXOR X0, X13
			PSHUFL $147, X13, X13
			PSHUFL $78, X14, X14
			PSHUFL $57, X15, X15
			SUBQ $2, BP
			JNE rounds_loop0_begin
		PADDL 0(AX), X4
		PADDL X1, X5
		PADDL X2, X6
		PADDL X3, X7
		MOVOU 0(DX), X0
		PXOR X4, X0
		MOVOU X0, 0(DI)
		MOVOU 16(DX), X0
		PXOR X5, X0
		MOVOU X0, 16(DI)
		MOVOU 32(DX), X0
		PXOR X6, X0
		MOVOU X0, 32(DI)
		MOVOU 48(DX), X0
		PXOR X7, X0
		MOVOU X0, 48(DI)
		PADDQ 0(BX), X3
		PADDL 0(AX), X8
		PADDL X1, X9
		PADDL X2, X10
		PADDL X3, X11
		MOVOU 64(DX), X0
		PXOR X8, X0
		MOVOU X0, 64(DI)
		MOVOU 80(DX), X0
		PXOR X9, X0
		MOVOU X0, 80(DI)
		MOVOU 96(DX), X0
		PXOR X10, X0
		MOVOU X0, 96(DI)
		MOVOU 112(DX), X0
		PXOR X11, X0
		MOVOU X0, 112(DI)
		PADDQ 0(BX), X3
		PADDL 0(AX), X12
		PADDL X1, X13
		PADDL X2, X14
		PADDL X3, X15
		MOVOU 128(DX), X0
		PXOR X12, X0
		MOVOU X0, 128(DI)
		MOVOU 144(DX), X0
		PXOR X13, X0
		MOVOU X0, 144(DI)
		MOVOU 160(DX), X0
		PXOR X14, X0
		MOVOU X0, 160(DI)
		MOVOU 176(DX), X0
		PXOR X15, X0
		MOVOU X0, 176(DI)
		PADDQ 0(BX), X3
		ADDQ $192, DX
		ADDQ $192, DI
		SUBQ $3, SI
		JCC vector_loop_begin
vector_loop_end:
	ADDQ $3, SI
	JEQ serial_loop_end
serial_loop_begin:
		MOVOU 0(AX), X4
		MOVO X1, X5
		MOVO X2, X6
		MOVO X3, X7
		MOVQ $20, BP
rounds_loop1_begin:
			PADDL X5, X4
			PXOR X4, X7
			MOVO X7, X0
			PSLLL $16, X0
			PSRLL $16, X7
			PXOR X0, X7
			PADDL X7, X6
			PXOR X6, X5
			MOVO X5, X0
			PSLLL $12, X0
			PSRLL $20, X5
			PXOR X0, X5
			PADDL X5, X4
			PXOR X4, X7
			MOVO X7, X0
			PSLLL $8, X0
			PSRLL $24, X7
			PXOR X0, X7
			PADDL X7, X6
			PXOR X6, X5
			MOVO X5, X0
			PSLLL $7, X0
			PSRLL $25, X5
			PXOR X0, X5
			PSHUFL $57, X5, X5
			PSHUFL $78, X6, X6
			PSHUFL $147, X7, X7
			PADDL X5, X4
			PXOR X4, X7
			MOVO X7, X0
			PSLLL $16, X0
			PSRLL $16, X7
			PXOR X0, X7
			PADDL X7, X6
			PXOR X6, X5
			MOVO X5, X0
			PSLLL $12, X0
			PSRLL $20, X5
			PXOR X0, X5
			PADDL X5, X4
			PXOR X4, X7
			MOVO X7, X0
			PSLLL $8, X0
			PSRLL $24, X7
			PXOR X0, X7
			PADDL X7, X6
			PXOR X6, X5
			MOVO X5, X0
			PSLLL $7, X0
			PSRLL $25, X5
			PXOR X0, X5
			PSHUFL $147, X5, X5
			PSHUFL $78, X6, X6
			PSHUFL $57, X7, X7
			SUBQ $2, BP
			JNE rounds_loop1_begin
		PADDL 0(AX), X4
		PADDL X1, X5
		PADDL X2, X6
		PADDL X3, X7
		MOVOU 0(DX), X0
		PXOR X4, X0
		MOVOU X0, 0(DI)
		MOVOU 16(DX), X0
		PXOR X5, X0
		MOVOU X0, 16(DI)
		MOVOU 32(DX), X0
		PXOR X6, X0
		MOVOU X0, 32(DI)
		MOVOU 48(DX), X0
		PXOR X7, X0
		MOVOU X0, 48(DI)
		PADDQ 0(BX), X3
		ADDQ $64, DX
		ADDQ $64, DI
		SUBQ $1, SI
		JNE serial_loop_begin
serial_loop_end:
	MOVOU X3, 32(CX)
	RET
